name: Build Zed Windows

on:
  workflow_dispatch:

jobs:
  build:
    outputs:
      version: ${{ steps.set_ref.outputs.version }}
    runs-on: windows-latest
    strategy:
      matrix:
        backend: [vulkan, opengl]
        include:
          - backend: vulkan
            artifact_name: zed-release
            rustflags: ""
          - backend: opengl
            artifact_name: zed-release-opengl
            rustflags: "--cfg gles"

    steps:
      - name: Enable long paths
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true

      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          repository: ${{ github.repository }}
          
      - name: Extract source code
        shell: bash
        run: |
          unzip zed-0.164.2.zip
          
      - name: Set git ref
        id: set_ref
        shell: bash
        run: |
          echo "ref=v0.164.2" >> $GITHUB_OUTPUT
          echo "version=v0.164.2" >> $GITHUB_OUTPUT

      - name: Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: wasm32-wasip1

      - name: Download UPX
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip" -OutFile "upx.zip"
          Expand-Archive -Path "upx.zip" -DestinationPath "."
          
      - name: Build release
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: cargo build --release

      - name: Compress executable with UPX
        run: .\upx-4.2.4-win64\upx.exe --best --lzma target/release/zed.exe

      - name: Archive build
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ matrix.artifact_name }}
          path: target/release/zed.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: artifacts

      - name: Get version
        id: version
        run: echo "VERSION=v0.164.2" >> $GITHUB_ENV

      - name: Create release directories and zip
        run: |
          mkdir -p zed-release zed-release-opengl
          mv artifacts/zed-release/zed.exe zed-release/
          mv artifacts/zed-release-opengl/zed.exe zed-release-opengl/
          zip -r zed-windows-${{ env.VERSION }}.zip zed-release/*
          zip -r zed-windows-opengl-${{ env.VERSION }}.zip zed-release-opengl/*

      - name: Upload release build artifacts to GitHub Release
        uses: softprops/action-gh-release@v2.1.0
        with:
          name: ${{ github.event.inputs.build_type == 'nightly' && format('Nightly {0}', env.VERSION) || env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: false
          make_latest: ${{ github.event.inputs.build_type != 'nightly' }}
          files: |
            zed-windows-${{ env.VERSION }}.zip
            zed-windows-opengl-${{ env.VERSION }}.zip